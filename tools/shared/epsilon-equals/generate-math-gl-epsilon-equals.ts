import { autoGeneratedFileComment } from '../../misc/auto-generated-file-comment';

export interface IGenerateMathGLEpsilonEqualsOptions {
  readonly name: string;
  readonly length: number;
}

export function generateMathGLEpsilonEquals(
  {
    name,
    length,
  }: IGenerateMathGLEpsilonEqualsOptions,
): string {
  return [
    ...autoGeneratedFileComment(),
    `import { readonly_${name} } from './${name}.type';`,
    `import { float_equals } from '../../float/float_equals';`,
    ``,
    `/**`,
    ` *  Returns whether or not the ${name}'s have approximately the same elements in the same position.`,
    ` */`,
    `export function ${name}_epsilon_equals(`,
    `  a: readonly_${name},`,
    `  b: readonly_${name},`,
    `  epsilon?: number,`,
    `): boolean {`,
    `  return (`,
    ...Array.from({ length }, (_, index: number): string => {
      return `    ${index > 0 ? '&& ' : '   '}float_equals(a[${index}], b[${index}], epsilon)`;
    }),
    `  );`,
    `}`,
    ``,
  ].join('\n');
}


